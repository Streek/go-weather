name: Version Bump and Release

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Type of version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Bump version
        id: bump
        run: |
          case "${{ github.event.inputs.bump_type }}" in
            patch)
              make version-bump-patch
              ;;
            minor)
              make version-bump-minor
              ;;
            major)
              make version-bump-major
              ;;
          esac
          
          NEW_VERSION=$(cat VERSION)
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "New version: $NEW_VERSION"

      - name: Update files with new version
        run: |
          VERSION=$(cat VERSION)
          
          # Update .SRCINFO
          sed -i "s/pkgver = .*/pkgver = $VERSION/" .SRCINFO
          
          # Update go.mod if needed
          sed -i "s/module github.com\/streek\/go-weather.*/module github.com\/streek\/go-weather/" go.mod

      - name: Commit version bump
        run: |
          VERSION=$(cat VERSION)
          git add VERSION .SRCINFO PKGBUILD
          git commit -m "Bump version to $VERSION"
          git push origin master

      - name: Create and push tag
        run: |
          VERSION=$(cat VERSION)
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.bump.outputs.new_version }}
          name: Release v${{ steps.bump.outputs.new_version }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
