name: Go

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [created, published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build
      run: make build

    - name: Test
      run: go test -v ./...

  build-release:
    needs: test
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Get version
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Build binaries
        run: |
          mkdir -p dist
          VERSION=$(cat VERSION)
          LDFLAGS="-X 'main.appVersion=$VERSION'"
          
          GOOS=linux GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/wgo-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -ldflags "$LDFLAGS" -o dist/wgo-linux-arm64 .
          GOOS=darwin GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/wgo-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -ldflags "$LDFLAGS" -o dist/wgo-darwin-arm64 .
          GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o dist/wgo-windows-amd64.exe .
      
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
