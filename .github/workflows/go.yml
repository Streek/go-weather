name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          
      - name: Build binaries
        run: |
          mkdir -p dist
          GOOS=linux GOARCH=amd64 go build -o dist/wgo-linux-amd64 .
          GOOS=linux GOARCH=arm64 go build -o dist/wgo-linux-arm64 .
          GOOS=darwin GOARCH=amd64 go build -o dist/wgo-darwin-amd64 .
          GOOS=darwin GOARCH=arm64 go build -o dist/wgo-darwin-arm64 .
          GOOS=windows GOARCH=amd64 go build -o dist/wgo-windows-amd64.exe .
      
      - name: Build Arch Linux Package
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          
          # Update PKGBUILD with correct version
          sed -i "s/pkgver=.*/pkgver=$VERSION/" PKGBUILD
          
          # Install required tools for package building
          sudo apt-get update
          sudo apt-get install -y base-devel
          
          # Create package
          mkdir -p arch-pkg
          cp PKGBUILD arch-pkg/
          cd arch-pkg
          makepkg -f
          
          # Move the package to dist directory
          mv *.pkg.tar.zst ../dist/
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
